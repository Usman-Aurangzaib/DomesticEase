"use strict";(()=>{var e={};e.id=2931,e.ids=[2931],e.modules={38013:e=>{e.exports=require("mongodb")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},57744:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>v,originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>b});var o={};a.r(o),a.d(o,{POST:()=>c});var r=a(95419),s=a(69108),n=a(99678),i=a(38292),u=a(6113),p=a(98984),d=a(12781);async function c(e){let{bucket:t}=await (0,i.T)(),a=(await e.formData()).get("file");if(!a)return p.NextResponse.json({success:!1,message:"No file provided"});let o=(0,u.randomUUID)();if(!(a instanceof Blob))return p.NextResponse.json({success:!1,message:"Invalid file entry"});{let e=Buffer.from(await a.arrayBuffer()),r=d.Readable.from(e),s=t.openUploadStream(o,{contentType:a.type,metadata:{}});await r.pipe(s)}return p.NextResponse.json({success:!0,name:o})}let l=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/upload-image/route",pathname:"/api/upload-image",filename:"route",bundlePath:"app/api/upload-image/route"},resolvedPagePath:"C:\\Users\\DELL\\Desktop\\DOMESTIC-EASE\\src\\app\\api\\upload-image\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:f,headerHooks:v,staticGenerationBailout:b}=l,x="/api/upload-image/route";function h(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}},38292:(e,t,a)=>{a.d(t,{T:()=>r});var o=a(38013);async function r(){let e=new o.MongoClient("mongodb+srv://basitdev:Z8TTCBtR5z0z76QC@domestic-ease-cluster.ygthspq.mongodb.net/",{}),t=new o.GridFSBucket(e.db(),{bucketName:"images"});return await e.connect(),console.log("Connected to the Database "),{client:e,bucket:t}}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),o=t.X(0,[1638,2791],()=>a(57744));module.exports=o})();